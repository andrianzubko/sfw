<?php

namespace App\Controller;

/**
 * There is no limits for names of controller classes and methods.
 */
class Index extends \SFW\Controller
{
    /**
     * Routes can be added to: whole class, constructor, any public method.
     */
    #[\SFW\Route('/')]
    public function index(): void
    {
        // Dynamic properties are allowed.
        $this->phrase = 'Hello! This is Simplest framework :)';

        // There is many ways to response. As example, with template processors: Native, Twig and Xslt.
        $this->sys('Response')->template('regular.index.html', [
            'phrase' => $this->phrase,
        ]);
    }

    /**
     * More complex example.
     *
     * Don't need to worry about exceptions. They all will be correctly caught.
     */
    #[\SFW\Route('/test/{id}', 'get')]
    public function test(): void
    {
        // Route parameters already placed at $_GET and $_REQUEST arrays.
        if (!preg_match('/^\d{1,10}$/', $_GET['id'])) {
            $this->sys('Response')->errorPage(404);
        }

        // Transaction can be run with needed isolation level and repeats at needed sql states on errors.
        // PgBouncer in transaction pool mode is fully supported (of course only for Pgsql).
        $this->sys('Transaction')->run(
            function (): bool {
                // It's possible to set results directly to this class properties.
                $this->my('Environment')->set($this);

                // In this place message will be only prepared (do some SQL fetches for example).
                // All heavy work will be done after browser disconnect at last shutdown function.
                $this->sys('Notifier')->add(
                    new \App\Notify\SendMessage('your@mail.com', 'Hello!')
                );

                // Dirty exit from transactions are supported.
                if (0) {
                    $this->exit();
                }

                // That's mean commit.
                return true;
            }
        );

        // Url can be generated by shorten form of class and method name (or by FQMN if needed).
        // Routes matched by the number of parameters. Pass null as some parameter to leave him as-is.
        $this->phrase = 'You are here: ' .
            self::$sys['url'] . $this->sys('Router')->genUrl('Index::test', $_GET['id']);

        // It's possible to pass all public(!!) properties directly to template processor.
        $this->sys('Response')->template('regular.index.html', $this);

        // Connection with browser will be aborted after any response,
        // and for example this sleep command will run in the background.
        sleep(2);
    }
}
