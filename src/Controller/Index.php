<?php

namespace App\Controller;

/**
 * There is no limits for names of controller classes and methods.
 */
class Index extends \SFW\Controller
{
    /**
     * Routes can be added to constructor (to whole class with same effect) or to any public methods.
     */
    #[\SFW\Route('/')]
    public function index(): void
    {
        /* Dynamic properties are allowed.
         */
        $this->phrase = 'Hello! This is Simplest framework :)';

        /* There is many ways to response. As example, with template processors: Native, Twig or Xslt.
         */
        self::sys('Response')->template('regular.index.html', [
            'phrase' => $this->phrase,
        ]);
    }

    /**
     * More complex example.
     *
     * Don't need to worry about exceptions. They all will be correctly caught.
     */
    #[\SFW\Route('/test/{id}', 'get')]
    public function test(): void
    {
        /* Route parameters already placed at $_GET and $_REQUEST arrays.
         */
        if (!preg_match('/^\d{1,10}$/', $_GET['id'])) {
            self::sys('Response')->error(404);
        }

        /* Transaction can be run with needed isolation level and repeats at needed sql states on errors.
         * PgBouncer in transaction pool mode is fully supported (of course only for Pgsql).
         */
        self::sys('Transaction')->run(
            function (): bool {
                /* It's possible to set results directly to this class properties.
                 */
                self::my('Environment')->setTo($this);

                /* In this place message will be only prepared (fetched some data).
                 * All heavy work will be done after browser disconnect at last shutdown function.
                 */
                self::sys('Notifier')->add(
                    new \App\Notify\SendMessage('your@mail.com', 'Hello!')
                );

                /* Dirty exit from transactions are supported.
                 * You can explicitly call self::sys('Db')->commit() before exit if needed.
                 */
                if (0) {
                    self::sys('Response')->json(['error' => 'Wrong id!'])->exit();
                }

                /* That's mean commit.
                 */
                return true;
            }
        );

        /* Url can be generated by shorten form of class and method name (or by FQMN if needed).
         * Routes matched by the number of parameters, and you can pass null to leave as-is.
         */
        $this->phrase = sprintf('You are here: %s',
            self::sys('Router')->genAbsoluteUrl('Index::test', $_GET['id'])
        );

        /* It's possible to pass all public(!) properties directly to template processor.
         */
        self::sys('Response')->template('regular.index.html', $this);

        /* Connection with browser will be aborted immediately after any response.
         * This sleep command will run in the background.
         */
        sleep(2);
    }
}
